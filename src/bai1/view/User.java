/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bai1.view;

import bai1.model.Employee;
import bai1.model.EmployeeSkill;
import bai1.model.Skill;
import java.awt.Checkbox;
import java.awt.GridLayout;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javafx.scene.control.CheckBox;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.text.View;

/**
 *
 * @author lamit
 */
public class User extends javax.swing.JFrame {
    ArrayList<Skill> listSkill = new ArrayList<>();
    ArrayList<JCheckBox> listCheckBox = new ArrayList<>();
    ArrayList<Skill> listSkillChoosed = new ArrayList<>();
    ArrayList<EmployeeSkill> listEmployeeSkill = new ArrayList<>();
    String filePathSkill = "D:\\Java\\Bai1\\src\\bai1\\skill.txt";
    String filePathEmployee = "D:\\Java\\Bai1\\src\\bai1\\employee.txt";
    String filePathEmployeeSkill = "D:\\Java\\Bai1\\src\\bai1\\employeeskill.txt";
    StringBuilder uid = new StringBuilder();
    String uname;
    /**
     * Creates new form User
     */
    public User() {
        initComponents();
        BufferedReader br = null;
        ArrayList<String> listString = new ArrayList<>();
        try{
            br = new BufferedReader(new FileReader(filePathSkill));
            String skillRead;
            while((skillRead = br.readLine()) != null){
                listString.add(skillRead);
            }
            br.close();
        }catch(Exception ex){
            ex.printStackTrace();
        }
        for(String s: listString){
            StringTokenizer stk = new StringTokenizer(s," ");
            int sid = Integer.parseInt(stk.nextToken());
            String sname = stk.nextToken();
            listSkill.add(new Skill(sid, sname));
            
        }
        panelCheckbox.setLayout(new GridLayout(listSkill.size(),2));
        for(int i = 0; i < listSkill.size(); i++){
            listCheckBox.add(i, new JCheckBox());
            panelCheckbox.add(listCheckBox.get(i));
            panelCheckbox.add(new JLabel(listSkill.get(i).getName()));
        }
    }

    private void checkComplete(){
        if(uid.length() == 6){
            
        }
        else{
            
        }
    }
    
    private boolean checkUserID(){
        String s = uid.toString();
        for(int i = 0; i < uid.length(); i++){
            if(i<2){
                if((s.charAt(i)>='a'&&s.charAt(i)<='z')||(s.charAt(i)>='A'&&s.charAt(i)<='Z')){
                    
                }
                else return false; 
            }
            else{
                if(s.charAt(i)>='0'&&s.charAt(i)<='9'){
                    
                }
                else return false;
            }
        }
        return true;
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tfUserID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfUsername = new javax.swing.JTextField();
        btnAddUser = new javax.swing.JButton();
        panelCheckbox = new javax.swing.JPanel();
        lbError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("enter ID");

        tfUserID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfUserIDKeyTyped(evt);
            }
        });

        jLabel2.setText("enter name");

        btnAddUser.setText("Add");
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCheckboxLayout = new javax.swing.GroupLayout(panelCheckbox);
        panelCheckbox.setLayout(panelCheckboxLayout);
        panelCheckboxLayout.setHorizontalGroup(
            panelCheckboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 179, Short.MAX_VALUE)
        );
        panelCheckboxLayout.setVerticalGroup(
            panelCheckboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        lbError.setText("Error");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(panelCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbError)
                    .addComponent(btnAddUser))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbError))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(btnAddUser)
                        .addContainerGap(176, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(panelCheckbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfUserIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfUserIDKeyTyped
        char s = evt.getKeyChar();
        uid.append(s);
        System.out.println(uid.toString());
        if(checkUserID()) lbError.setVisible(false);
        else lbError.setVisible(true);
    }//GEN-LAST:event_tfUserIDKeyTyped

    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
        System.out.println(uid);
        if(checkUserID() && uid.length() == 8){
            JOptionPane.showMessageDialog(this, "Success");
            uname = tfUsername.getText();
            for(int i = 0; i < listCheckBox.size(); i++){
                if(listCheckBox.get(i).isSelected()){
//                    listSkillChoosed.add(new Skill(listSkill.get(i).getId(), listSkill.get(i).getName()));
                    listEmployeeSkill.add(new EmployeeSkill(listSkill.get(i).getId(), uid.toString()));
                }
            }
            updateToFile();
        }
        else{
            lbError.setVisible(true);
        }
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void updateToFile(){
        BufferedWriter bw = null;
        try{
            bw = new BufferedWriter(new FileWriter(filePathEmployee));
            bw.write(new Employee(uid.toString(), uname).toString());
            bw.close();
        }catch(Exception ex){
            ex.printStackTrace();
        }
        BufferedWriter bw1 = null;
        try{
            bw1 = new BufferedWriter(new FileWriter(filePathEmployeeSkill));
            for(EmployeeSkill es : listEmployeeSkill){
                bw1.write(es.toString());
            }
            bw1.close();
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new User().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lbError;
    private javax.swing.JPanel panelCheckbox;
    private javax.swing.JTextField tfUserID;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables
}
